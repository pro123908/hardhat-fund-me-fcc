{
  "address": "0xfabD8379C7596e9FB469674606c794274A0F392e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x9bdf62b7436436b03be3d9efef85da5dbcd3d93567dfd4968afc4594ce423a56",
  "receipt": {
    "to": null,
    "from": "0x8a51Bc2dAAC7AD20ACe24bd778d94F6EfE6bf23F",
    "contractAddress": "0xfabD8379C7596e9FB469674606c794274A0F392e",
    "transactionIndex": 32,
    "gasUsed": "1051002",
    "logsBloom": "0x
    "blockHash": "0x37aec09b5a478c37cdf0c2b01caa435ff66a3756483d7404ed2638c3dba1ee46",
    "transactionHash": "0x9bdf62b7436436b03be3d9efef85da5dbcd3d93567dfd4968afc4594ce423a56",
    "logs": [],
    "blockNumber": 10863093,
    "cumulativeGasUsed": "6403941",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "579be9f1062fef1ba3de54cb18c9b304",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Pragma\\npragma solidity ^0.8.8;\\n\\n// Import the libraries we need\\nimport \\\"./PriceConverter.sol\\\";\\n// chainlink oracle for price feed\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n//Error codes\\nerror FundMe__NotOwner();\\n\\n// Interfaces, libraries, and contracts\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversationRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // resetting the array\\n        s_funders = new address[](0);\\n\\n        // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess,\\\"Send Failed\\\");\\n\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings cannot be in memory\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // resetting the array\\n        s_funders = new address[](0);\\n\\n        // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess,\\\"Send Failed\\\");\\n\\n        // call\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    // View/Pure functions\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xc889cce93d1bd2d7d9c7d7f3a8be52818c60c5ce1c9de3629a872e18fabc55b7\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\n// chainlink oracle for price feed\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getVersion() internal view returns (uint256) {\\r\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\r\\n            0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\r\\n        );\\r\\n        return priceFeed.version();\\r\\n    }\\r\\n\\r\\n    function getConversationRate(\\r\\n        uint256 _ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * _ethAmount) / 1e18;\\r\\n\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4cc599c5f9123a794c67116bea81584f7851f68a34047d987d8a29fd261c89ff\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200132d3803806200132d833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111a76200018660003960008181610351015281816105a0015281816105f001526107e601526111a76000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610adf565b610306565b6040516100cc9190610b25565b60405180910390f35b3480156100e157600080fd5b506100ea61034f565b005b3480156100f857600080fd5b5061010161058f565b60405161010e9190610b25565b60405180910390f35b34801561012357600080fd5b5061012c61059c565b6040516101399190610b4f565b60405180910390f35b34801561014e57600080fd5b506101576105c4565b6040516101649190610bc9565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105ee565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610c10565b6108b2565b6040516101c29190610b4f565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108f990919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c9a565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102fd9190610ce9565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d4576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561047f5760008082815481106103f9576103f8610d3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047790610d6e565b9150506103d7565b50600067ffffffffffffffff81111561049b5761049a610db7565b5b6040519080825280602002602001820160405280156104c95781602001602082028036833780820191505090505b50600090805190602001906104df9291906109d5565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161050690610e17565b60006040518083038185875af1925050503d8060008114610543576040519150601f19603f3d011682016040523d82523d6000602084013e610548565b606091505b505090508061058c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058390610e78565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610673576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106f657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106ac575b5050505050905060005b815181101561078157600082828151811061071e5761071d610d3f565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061077990610d6e565b915050610700565b50600067ffffffffffffffff81111561079d5761079c610db7565b5b6040519080825280602002602001820160405280156107cb5781602001602082028036833780820191505090505b50600090805190602001906107e19291906109d5565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161082890610e17565b60006040518083038185875af1925050503d8060008114610865576040519150601f19603f3d011682016040523d82523d6000602084013e61086a565b606091505b50509050806108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a590610e78565b60405180910390fd5b5050565b60008082815481106108c7576108c6610d3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061090583610935565b90506000670de0b6b3a7640000858361091e9190610e98565b6109289190610f21565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561097e57600080fd5b505afa158015610992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b69190610fdf565b5050509150506402540be400816109cd919061105a565b915050919050565b828054828255906000526020600020908101928215610a4e579160200282015b82811115610a4d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109f5565b5b509050610a5b9190610a5f565b5090565b5b80821115610a78576000816000905550600101610a60565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aac82610a81565b9050919050565b610abc81610aa1565b8114610ac757600080fd5b50565b600081359050610ad981610ab3565b92915050565b600060208284031215610af557610af4610a7c565b5b6000610b0384828501610aca565b91505092915050565b6000819050919050565b610b1f81610b0c565b82525050565b6000602082019050610b3a6000830184610b16565b92915050565b610b4981610aa1565b82525050565b6000602082019050610b646000830184610b40565b92915050565b6000819050919050565b6000610b8f610b8a610b8584610a81565b610b6a565b610a81565b9050919050565b6000610ba182610b74565b9050919050565b6000610bb382610b96565b9050919050565b610bc381610ba8565b82525050565b6000602082019050610bde6000830184610bba565b92915050565b610bed81610b0c565b8114610bf857600080fd5b50565b600081359050610c0a81610be4565b92915050565b600060208284031215610c2657610c25610a7c565b5b6000610c3484828501610bfb565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610c84601383610c3d565b9150610c8f82610c4e565b602082019050919050565b60006020820190508181036000830152610cb381610c77565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf482610b0c565b9150610cff83610b0c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d3457610d33610cba565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d7982610b0c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dac57610dab610cba565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e01600083610de6565b9150610e0c82610df1565b600082019050919050565b6000610e2282610df4565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610e62600b83610c3d565b9150610e6d82610e2c565b602082019050919050565b60006020820190508181036000830152610e9181610e55565b9050919050565b6000610ea382610b0c565b9150610eae83610b0c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee757610ee6610cba565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2c82610b0c565b9150610f3783610b0c565b925082610f4757610f46610ef2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f7181610f52565b8114610f7c57600080fd5b50565b600081519050610f8e81610f68565b92915050565b6000819050919050565b610fa781610f94565b8114610fb257600080fd5b50565b600081519050610fc481610f9e565b92915050565b600081519050610fd981610be4565b92915050565b600080600080600060a08688031215610ffb57610ffa610a7c565b5b600061100988828901610f7f565b955050602061101a88828901610fb5565b945050604061102b88828901610fca565b935050606061103c88828901610fca565b925050608061104d88828901610f7f565b9150509295509295909350565b600061106582610f94565b915061107083610f94565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110af576110ae610cba565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110ec576110eb610cba565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561112957611128610cba565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561116657611165610cba565b5b82820290509291505056fea2646970667358221220c27f17c6f113a81282188339610f294077820b867b01f62d6a09820cbc2d49cf64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c1461018e5761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610adf565b610306565b6040516100cc9190610b25565b60405180910390f35b3480156100e157600080fd5b506100ea61034f565b005b3480156100f857600080fd5b5061010161058f565b60405161010e9190610b25565b60405180910390f35b34801561012357600080fd5b5061012c61059c565b6040516101399190610b4f565b60405180910390f35b34801561014e57600080fd5b506101576105c4565b6040516101649190610bc9565b60405180910390f35b6101756101cb565b005b34801561018357600080fd5b5061018c6105ee565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610c10565b6108b2565b6040516101c29190610b4f565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108f990919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610c9a565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102fd9190610ce9565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d4576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561047f5760008082815481106103f9576103f8610d3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061047790610d6e565b9150506103d7565b50600067ffffffffffffffff81111561049b5761049a610db7565b5b6040519080825280602002602001820160405280156104c95781602001602082028036833780820191505090505b50600090805190602001906104df9291906109d5565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161050690610e17565b60006040518083038185875af1925050503d8060008114610543576040519150601f19603f3d011682016040523d82523d6000602084013e610548565b606091505b505090508061058c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058390610e78565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610673576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106f657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106ac575b5050505050905060005b815181101561078157600082828151811061071e5761071d610d3f565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061077990610d6e565b915050610700565b50600067ffffffffffffffff81111561079d5761079c610db7565b5b6040519080825280602002602001820160405280156107cb5781602001602082028036833780820191505090505b50600090805190602001906107e19291906109d5565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161082890610e17565b60006040518083038185875af1925050503d8060008114610865576040519150601f19603f3d011682016040523d82523d6000602084013e61086a565b606091505b50509050806108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a590610e78565b60405180910390fd5b5050565b60008082815481106108c7576108c6610d3f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061090583610935565b90506000670de0b6b3a7640000858361091e9190610e98565b6109289190610f21565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561097e57600080fd5b505afa158015610992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b69190610fdf565b5050509150506402540be400816109cd919061105a565b915050919050565b828054828255906000526020600020908101928215610a4e579160200282015b82811115610a4d5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109f5565b5b509050610a5b9190610a5f565b5090565b5b80821115610a78576000816000905550600101610a60565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aac82610a81565b9050919050565b610abc81610aa1565b8114610ac757600080fd5b50565b600081359050610ad981610ab3565b92915050565b600060208284031215610af557610af4610a7c565b5b6000610b0384828501610aca565b91505092915050565b6000819050919050565b610b1f81610b0c565b82525050565b6000602082019050610b3a6000830184610b16565b92915050565b610b4981610aa1565b82525050565b6000602082019050610b646000830184610b40565b92915050565b6000819050919050565b6000610b8f610b8a610b8584610a81565b610b6a565b610a81565b9050919050565b6000610ba182610b74565b9050919050565b6000610bb382610b96565b9050919050565b610bc381610ba8565b82525050565b6000602082019050610bde6000830184610bba565b92915050565b610bed81610b0c565b8114610bf857600080fd5b50565b600081359050610c0a81610be4565b92915050565b600060208284031215610c2657610c25610a7c565b5b6000610c3484828501610bfb565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610c84601383610c3d565b9150610c8f82610c4e565b602082019050919050565b60006020820190508181036000830152610cb381610c77565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf482610b0c565b9150610cff83610b0c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d3457610d33610cba565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d7982610b0c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dac57610dab610cba565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e01600083610de6565b9150610e0c82610df1565b600082019050919050565b6000610e2282610df4565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610e62600b83610c3d565b9150610e6d82610e2c565b602082019050919050565b60006020820190508181036000830152610e9181610e55565b9050919050565b6000610ea382610b0c565b9150610eae83610b0c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee757610ee6610cba565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2c82610b0c565b9150610f3783610b0c565b925082610f4757610f46610ef2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f7181610f52565b8114610f7c57600080fd5b50565b600081519050610f8e81610f68565b92915050565b6000819050919050565b610fa781610f94565b8114610fb257600080fd5b50565b600081519050610fc481610f9e565b92915050565b600081519050610fd981610be4565b92915050565b600080600080600060a08688031215610ffb57610ffa610a7c565b5b600061100988828901610f7f565b955050602061101a88828901610fb5565b945050604061102b88828901610fca565b935050606061103c88828901610fca565b925050608061104d88828901610f7f565b9150509295509295909350565b600061106582610f94565b915061107083610f94565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110af576110ae610cba565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110ec576110eb610cba565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561112957611128610cba565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561116657611165610cba565b5b82820290509291505056fea2646970667358221220c27f17c6f113a81282188339610f294077820b867b01f62d6a09820cbc2d49cf64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}